// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`React JS with Styled Components Snapshots makeIndexImports 1`] = `
Object {
  "react-ts/index.tsx": "// DEVELOPER NOTE: These components are ready to lazy-load. You may also import components directly.

export const blah.js = () => import(\\"./blah.js\\");
",
  "react-ts/indexNotLazy.tsx": "// DEVELOPER NOTE: This file includes all components so importing this file may be very inefficient. Use carefully! You may prefer to import components directly or use index.js which has import functions, typically treated as a code splitting point.

export { default as blahJs } from \\"./blah.js\\";
",
}
`;

exports[`React JS with Styled Components Snapshots react-js-styled-components: <img src="pic.jpeg" class="frogs"> 1`] = `
Object {
  "disposeAll": [Function],
  "metaTemplates": Array [
    Object {
      "files": Object {
        "react-js-styled-components/imgSrc.js": "import React from \\"react\\";
import styled from \\"styled-components\\";

const StyledImg = styled.img\`
  background: green;
\`;

const constants = {
  crossOrigin: { Anonymous: \\"anonymous\\", \\"Use Credentials\\": \\"use-credentials\\" }
};

const ImgSrc = ({ src, width, height, srcSet, crossOrigin }) => (
  <StyledImg
    src={src}
    width={width}
    height={height}
    srcSet={srcSet}
    crossOrigin={constants.crossOrigin[crossOrigin]}
  />
);

export default ImgSrc;
",
      },
      "formatId": "react-js-styled-components",
    },
  ],
}
`;

exports[`React JS with Styled Components Snapshots react-js-styled-components: Basic variables 1`] = `
Object {
  "disposeAll": [Function],
  "metaTemplates": Array [
    Object {
      "files": Object {
        "react-js-styled-components/paragraph.js": "import React from \\"react\\";

const Paragraph = ({ children }) => (
  <p>
    {children !== undefined ? (
      children
    ) : (
      <React.Fragment>Some placeholder text</React.Fragment>
    )}
  </p>
);

export default Paragraph;
",
      },
      "formatId": "react-js-styled-components",
    },
  ],
}
`;

exports[`React JS with Styled Components Snapshots react-js-styled-components: Boolean attribute values 1`] = `
Array [
  Object {
    "files": Object {
      "react-js-styled-components/row.js": "import React from \\"react\\";
import styled from \\"styled-components\\";

const StyledDiv = styled.div\`
  color: red;
  color: blue;
\`;

const Row = ({ isReversed, children }) => (
  <StyledDiv isReversed={isReversed}>
    {children !== undefined ? (
      children
    ) : (
      <React.Fragment>Columns</React.Fragment>
    )}
  </StyledDiv>
);

export default Row;
",
    },
    "formatId": "react-js-styled-components",
  },
]
`;

exports[`React JS with Styled Components Snapshots react-js-styled-components: Enum attribute values 1`] = `
Array [
  Object {
    "files": Object {
      "react-js-styled-components/container.js": "import React from \\"react\\";
import styled from \\"styled-components\\";

const StyledDiv = styled.div\`
  \${props =>
    [\\"g-flex-container\\", \\"g-flex-container-fluid\\"].indexOf(
      props.containerType
    ) !== -1 &&
    styled.css\`
      background: red;
      color: purple;
    \`}
  \${props =>
    props.containerType === \\"g-flex-container-fluid\\" &&
    styled.css\`
      color: red;
    \`}
@media only screen and (min-width: 48em) {
    \${props =>
      props.containerType === \\"g-flex-container\\" &&
      styled.css\`
        color: blue;
      \`};
  }
\`;

const Container = ({ containerType, children }) => (
  <StyledDiv containerType={containerType}>
    {children !== undefined ? (
      children
    ) : (
      <React.Fragment>Rows...</React.Fragment>
    )}
  </StyledDiv>
);

export default Container;
",
    },
    "formatId": "react-js-styled-components",
  },
]
`;

exports[`React JS with Styled Components Snapshots react-js-styled-components: Form input[checked] 1`] = `
Object {
  "disposeAll": [Function],
  "metaTemplates": Array [
    Object {
      "files": Object {
        "react-js-styled-components/input.js": "import React from \\"react\\";

const Input = ({
  textId,
  name,
  disabled,
  readOnly,
  autoFocus,
  value,
  checked,
  onChange
}) => (
  <input
    id={textId}
    type=\\"checkbox\\"
    name={name}
    disabled={disabled}
    readOnly={readOnly}
    autoFocus={autoFocus}
    value={value}
    checked={checked}
    onChange={onChange}
  />
);

export default Input;
",
      },
      "formatId": "react-js-styled-components",
    },
  ],
}
`;

exports[`React JS with Styled Components Snapshots react-js-styled-components: Form label input[checked] 1`] = `
Object {
  "disposeAll": [Function],
  "metaTemplates": Array [
    Object {
      "files": Object {
        "react-js-styled-components/input.js": "import React from \\"react\\";

const Input = ({
  textId,
  name,
  disabled,
  readOnly,
  autoFocus,
  value,
  checked,
  onChange
}) => (
  <label htmlFor={textId}>
    <input
      id={textId}
      type=\\"checkbox\\"
      name={name}
      disabled={disabled}
      readOnly={readOnly}
      autoFocus={autoFocus}
      value={value}
      checked={checked}
      onChange={onChange}
    />
  </label>
);

export default Input;
",
      },
      "formatId": "react-js-styled-components",
    },
  ],
}
`;

exports[`React JS with Styled Components Snapshots react-js-styled-components: H1 with configurable Id 1`] = `
Object {
  "disposeAll": [Function],
  "metaTemplates": Array [
    Object {
      "files": Object {
        "react-js-styled-components/h1Id.js": "import React from \\"react\\";

const H1Id = ({ id }) => <h1 id={id}>stuff</h1>;

export default H1Id;
",
      },
      "formatId": "react-js-styled-components",
    },
  ],
}
`;

exports[`React JS with Styled Components Snapshots react-js-styled-components: Link with boolean class 1`] = `
Array [
  Object {
    "files": Object {
      "react-js-styled-components/a.js": "import React from \\"react\\";
import styled from \\"styled-components\\";

const StyledA = styled.a\`
  color: white;
  \${props =>
    props.isMuted &&
    styled.css\`
      opacity: 0.5;
    \`}
\`;

const constants = {
  target: { Blank: \\"_blank\\", Top: \\"_top\\", Self: \\"_self\\", Parent: \\"_parent\\" }
};

const A = ({ isMuted, href, rel, target, children }) => (
  <StyledA
    isMuted={isMuted}
    href={href}
    rel={rel}
    target={constants.target[target]}
  >
    {children !== undefined ? (
      children
    ) : (
      <React.Fragment>Example text</React.Fragment>
    )}
  </StyledA>
);

export default A;
",
    },
    "formatId": "react-js-styled-components",
  },
]
`;

exports[`React JS with Styled Components Snapshots react-js-styled-components: Lots of enum attribute values 1`] = `
Array [
  Object {
    "files": Object {
      "react-js-styled-components/container.js": "import React from \\"react\\";
import styled from \\"styled-components\\";

const StyledDiv = styled.div\`
  color: red;
  \${props =>
    props.columnXs === \\"g-flex-col-xs\\" &&
    styled.css\`
      color: blue;
    \`}
\`;

const Container = ({ isReversed, columnXs, children }) => (
  <StyledDiv isReversed={isReversed} columnXs={columnXs}>
    {children !== undefined ? (
      children
    ) : (
      <React.Fragment>Columns</React.Fragment>
    )}
  </StyledDiv>
);

export default Container;
",
    },
    "formatId": "react-js-styled-components",
  },
]
`;

exports[`React JS with Styled Components Snapshots react-js-styled-components: form input[text] 1`] = `
Object {
  "disposeAll": [Function],
  "metaTemplates": Array [
    Object {
      "files": Object {
        "react-js-styled-components/input.js": "import React from \\"react\\";

const constants = {
  autoComplete: {
    Off: \\"off\\",
    On: \\"on\\",
    Name: \\"name\\",
    \\"Honorific: Prefix\\": \\"honorific-prefix\\",
    \\"Given Name\\": \\"given-name\\",
    \\"Additional Name\\": \\"additional-name\\",
    \\"Family Name\\": \\"family-name\\",
    \\"Honorific: Suffix\\": \\"honorific-suffix\\",
    Nickname: \\"nickname\\",
    Email: \\"email\\",
    Username: \\"username\\",
    \\"New Password\\": \\"new-password\\",
    \\"Current Password\\": \\"current-password\\",
    \\"Organization Title\\": \\"organization-title\\",
    Organization: \\"organization\\",
    \\"Street Address\\": \\"street-address\\",
    \\"Address Line 1\\": \\"address-line1\\",
    \\"Address Line 2\\": \\"address-line2\\",
    \\"Address Line 3\\": \\"address-line3\\",
    \\"Address Level 4\\": \\"address-level4\\",
    \\"Address Level 3\\": \\"address-level3\\",
    \\"Address Level 2\\": \\"address-level2\\",
    \\"Address Level 1\\": \\"address-level1\\",
    Country: \\"country\\",
    \\"Country Name\\": \\"country-name\\",
    \\"Postal Code\\": \\"postal-code\\",
    \\"Credit Card: Name\\": \\"cc-name\\",
    \\"Credit Card: Given Name\\": \\"cc-given-name\\",
    \\"Credit Card: Additional Name\\": \\"cc-additional-name\\",
    \\"Credit Card: Family Name\\": \\"cc-family-name\\",
    \\"Credit Card: Number\\": \\"cc-number\\",
    \\"Credit Card: Expiry\\": \\"cc-exp\\",
    \\"Credit Card: Expiry Month\\": \\"cc-exp-month\\",
    \\"Credit Card: Expiry Year\\": \\"cc-exp-year\\",
    \\"Credit Card: CSC\\": \\"cc-csc\\",
    \\"Credit Card: Type\\": \\"cc-type\\",
    \\"Transaction: Currency\\": \\"transaction-currency\\",
    \\"Transaction: Amount\\": \\"transaction-amount\\",
    Language: \\"language\\",
    Birthday: \\"bday\\",
    \\"Birthday: Day\\": \\"bday-day\\",
    \\"Birthday: Month\\": \\"bday-month\\",
    \\"Birthday: Year\\": \\"bday-year\\",
    Sex: \\"sex\\",
    Telephone: \\"tel\\",
    \\"Telephone: Country Code\\": \\"tel-country-code\\",
    \\"Telephone: National\\": \\"tel-national\\",
    \\"Telephone: Area Code\\": \\"tel-area-code\\",
    \\"Telephone: Local\\": \\"tel-local\\",
    \\"Telephone: Extension\\": \\"tel-extension\\",
    IMPP: \\"impp\\",
    URL: \\"url\\",
    Photo: \\"photo\\"
  }
};

const Input = ({
  textId,
  name,
  disabled,
  readOnly,
  autoFocus,
  value,
  spellCheck,
  maxLength,
  autoComplete,
  onChange
}) => (
  <React.Fragment>
    <label htmlFor={textId}>Label text</label>
    <input
      id={textId}
      type=\\"text\\"
      name={name}
      disabled={disabled}
      readOnly={readOnly}
      autoFocus={autoFocus}
      value={value}
      spellCheck={spellCheck}
      maxLength={maxLength}
      autoComplete={constants.autoComplete[autoComplete]}
      onChange={onChange}
    />
  </React.Fragment>
);

export default Input;
",
      },
      "formatId": "react-js-styled-components",
    },
  ],
}
`;

exports[`React JS with Styled Components react-js-styled-components: CSS Configuration (CSS Variables and Scss Variables) 1`] = `
Array [
  Object {
    "files": Object {
      "react-js-styled-components/a.js": "import React from \\"react\\";
import styled from \\"styled-components\\";

const StyledA = styled.a\`
  color: #ffffff !important;
  \${props =>
    props.isMuted &&
    styled.css\`
      opacity: 0.5;
    \`}
\`;

const constants = {
  target: { Blank: \\"_blank\\", Top: \\"_top\\", Self: \\"_self\\", Parent: \\"_parent\\" }
};

const A = ({ isMuted, href, rel, target, children }) => (
  <StyledA
    isMuted={isMuted}
    href={href}
    rel={rel}
    target={constants.target[target]}
  >
    {children !== undefined ? (
      children
    ) : (
      <React.Fragment>Example text</React.Fragment>
    )}
  </StyledA>
);

export default A;
",
    },
    "formatId": "react-js-styled-components",
  },
]
`;

exports[`React JS with Styled Components react-js-styled-components: CSS Configuration (CSS Variables and Scss Variables) 2`] = `
Array [
  Object {
    "files": Object {
      "react-js-styled-components/a.js": "import React from \\"react\\";
import styled from \\"styled-components\\";

const StyledA = styled.a\`
  background: #ffffff url(\\"big.gif\\") !important;
  \${props =>
    props.isMuted &&
    styled.css\`
      opacity: 0.5;
    \`}
\`;

const constants = {
  target: { Blank: \\"_blank\\", Top: \\"_top\\", Self: \\"_self\\", Parent: \\"_parent\\" }
};

const A = ({ isMuted, href, rel, target, children }) => (
  <StyledA
    isMuted={isMuted}
    href={href}
    rel={rel}
    target={constants.target[target]}
  >
    {children !== undefined ? (
      children
    ) : (
      <React.Fragment>Example text</React.Fragment>
    )}
  </StyledA>
);

export default A;
",
    },
    "formatId": "react-js-styled-components",
  },
]
`;

exports[`React JS with Styled Components react-js-styled-components: CSS Configuration of Fonts 1`] = `
Array [
  Object {
    "files": Object {
      "react-js-styled-components/a.js": "import React from \\"react\\";
import styled from \\"styled-components\\";

const StyledA = styled.a\`
  font-family: Arial, sans-serif;
\`;

const constants = {
  target: { Blank: \\"_blank\\", Top: \\"_top\\", Self: \\"_self\\", Parent: \\"_parent\\" }
};

const A = ({ href, rel, target, children }) => (
  <StyledA href={href} rel={rel} target={constants.target[target]}>
    {children !== undefined ? (
      children
    ) : (
      <React.Fragment>Example text</React.Fragment>
    )}
  </StyledA>
);

export default A;
",
    },
    "formatId": "react-js-styled-components",
  },
]
`;

exports[`React JS with Styled Components react-js-styled-components: CalculatedProps 1`] = `
Object {
  "disposeAll": [Function],
  "metaTemplates": Array [
    Object {
      "files": Object {
        "react-js-styled-components/textbox.js": "import React from \\"react\\";

const constants = {
  type: {
    Button: \\"button\\",
    Checkbox: \\"checkbox\\",
    Color: \\"color\\",
    Date: \\"date\\",
    \\"DateTime: Local\\": \\"datetime-local\\",
    Email: \\"email\\",
    File: \\"file\\",
    Hidden: \\"hidden\\",
    Image: \\"image\\",
    Month: \\"month\\",
    Number: \\"number\\",
    Password: \\"password\\",
    Radio: \\"radio\\",
    Range: \\"range\\",
    Reset: \\"reset\\",
    Search: \\"search\\",
    Submit: \\"submit\\",
    Telephone: \\"tel\\",
    Text: \\"text\\",
    Time: \\"time\\",
    URL: \\"url\\",
    Week: \\"week\\"
  },
  autoComplete: {
    Off: \\"off\\",
    On: \\"on\\",
    Name: \\"name\\",
    \\"Honorific: Prefix\\": \\"honorific-prefix\\",
    \\"Given Name\\": \\"given-name\\",
    \\"Additional Name\\": \\"additional-name\\",
    \\"Family Name\\": \\"family-name\\",
    \\"Honorific: Suffix\\": \\"honorific-suffix\\",
    Nickname: \\"nickname\\",
    Email: \\"email\\",
    Username: \\"username\\",
    \\"New Password\\": \\"new-password\\",
    \\"Current Password\\": \\"current-password\\",
    \\"Organization Title\\": \\"organization-title\\",
    Organization: \\"organization\\",
    \\"Street Address\\": \\"street-address\\",
    \\"Address Line 1\\": \\"address-line1\\",
    \\"Address Line 2\\": \\"address-line2\\",
    \\"Address Line 3\\": \\"address-line3\\",
    \\"Address Level 4\\": \\"address-level4\\",
    \\"Address Level 3\\": \\"address-level3\\",
    \\"Address Level 2\\": \\"address-level2\\",
    \\"Address Level 1\\": \\"address-level1\\",
    Country: \\"country\\",
    \\"Country Name\\": \\"country-name\\",
    \\"Postal Code\\": \\"postal-code\\",
    \\"Credit Card: Name\\": \\"cc-name\\",
    \\"Credit Card: Given Name\\": \\"cc-given-name\\",
    \\"Credit Card: Additional Name\\": \\"cc-additional-name\\",
    \\"Credit Card: Family Name\\": \\"cc-family-name\\",
    \\"Credit Card: Number\\": \\"cc-number\\",
    \\"Credit Card: Expiry\\": \\"cc-exp\\",
    \\"Credit Card: Expiry Month\\": \\"cc-exp-month\\",
    \\"Credit Card: Expiry Year\\": \\"cc-exp-year\\",
    \\"Credit Card: CSC\\": \\"cc-csc\\",
    \\"Credit Card: Type\\": \\"cc-type\\",
    \\"Transaction: Currency\\": \\"transaction-currency\\",
    \\"Transaction: Amount\\": \\"transaction-amount\\",
    Language: \\"language\\",
    Birthday: \\"bday\\",
    \\"Birthday: Day\\": \\"bday-day\\",
    \\"Birthday: Month\\": \\"bday-month\\",
    \\"Birthday: Year\\": \\"bday-year\\",
    Sex: \\"sex\\",
    Telephone: \\"tel\\",
    \\"Telephone: Country Code\\": \\"tel-country-code\\",
    \\"Telephone: National\\": \\"tel-national\\",
    \\"Telephone: Area Code\\": \\"tel-area-code\\",
    \\"Telephone: Local\\": \\"tel-local\\",
    \\"Telephone: Extension\\": \\"tel-extension\\",
    IMPP: \\"impp\\",
    URL: \\"url\\",
    Photo: \\"photo\\"
  }
};

const Textbox = ({
  name,
  disabled,
  readOnly,
  autoFocus,
  value,
  type,
  spellCheck,
  maxLength,
  autoComplete,
  onChange
}) => (
  <input
    name={name}
    disabled={disabled}
    readOnly={readOnly}
    autoFocus={autoFocus}
    value={value}
    type={constants.type[type]}
    spellCheck={spellCheck}
    maxLength={maxLength}
    autoComplete={constants.autoComplete[autoComplete]}
    onChange={onChange}
  />
);

const Textbox__calculated = props =>
  React.createElement(Textbox, {
    ...props,
    textValueLength: (props => {
      return textValue.length;
    })(props)
  });

export { Textbox };

export default Textbox__calculated;
",
      },
      "formatId": "react-js-styled-components",
    },
  ],
}
`;

exports[`React JS with Styled Components react-js-styled-components: jsxToUsageCode with boolean false 1`] = `
Object {
  "react-js-styled-components": "import React from \\"react\\";
import Ul from \\"@govtnz/ds/build/react-js-styled-components/Ul\\";
import Li from \\"@govtnz/ds/build/react-js-styled-components/Li\\";

export default () => (
  <Ul isBulleted=\\"false\\">
    <Li>Unordered item one</Li>
    <Li>Unordered item two</Li>
  </Ul>
);
",
}
`;

exports[`React JS with Styled Components react-js-styled-components: jsxToUsageCode with boolean false and inline HTML 1`] = `
Object {
  "react-js-styled-components": "import React from \\"react\\";
import Ul from \\"@govtnz/ds/build/react-js-styled-components/Ul\\";
import Li from \\"@govtnz/ds/build/react-js-styled-components/Li\\";

export default () => (
  <Ul isBulleted=\\"false\\">
    <Li>
      Unordered<a href=\\"http://zombo.com/\\">item one</a>
    </Li>
    <Li>Unordered item two</Li>
  </Ul>
);
",
}
`;

exports[`React JS with Styled Components react-js-styled-components: jsxToUsageCode with boolean true 1`] = `
Object {
  "react-js-styled-components": "import React from \\"react\\";
import Ul from \\"@govtnz/ds/build/react-js-styled-components/Ul\\";
import Li from \\"@govtnz/ds/build/react-js-styled-components/Li\\";

export default () => (
  <Ul isBulleted>
    <Li>Unordered item one</Li>
    <Li>Unordered item two</Li>
  </Ul>
);
",
}
`;

exports[`React JS with Styled Components react-js-styled-components: jsxToUsageCode with enumerations 1`] = `
Object {
  "react-js-styled-components": "import React from \\"react\\";
import Div from \\"@govtnz/ds/build/react-js-styled-components/Div\\";

export default () => <Div containerType=\\"fixed\\" />;
",
}
`;

exports[`React JS with Styled Components react-js-styled-components: makeUsage 1`] = `
Object {
  "react-js-styled-components": "import React from \\"react\\";
import H1 from \\"@govtnz/ds/build/react-js-styled-components/H1\\";
import A from \\"@govtnz/ds/build/react-js-styled-components/A\\";

export default () => (
  <H1>
    <A href=\\"https://html5zombo.com/\\" reversed=\\"On\\">
      Click me
    </A>
  </H1>
);
",
}
`;

exports[`React JS with Styled Components react-js-styled-components: makeUsage with booleans 1`] = `
Object {
  "react-js-styled-components": "import React from \\"react\\";
import H1 from \\"@govtnz/ds/build/react-js-styled-components/H1\\";
import A from \\"@govtnz/ds/build/react-js-styled-components/A\\";

export default () => (
  <H1>
    <A href=\\"https://html5zombo.com/\\" isReversed>
      Click me
    </A>
  </H1>
);
",
}
`;
